<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="/css/style.css">
    <title>Add LEGO Set</title>
</head>
<body>
    <%- include('partials/navbar', {page: '/lego/addSet'}) %>

    <div class="container mx-auto px-4">
        <div class="hero">
            <div class="hero-content text-center">
                <div class="max-w-md">
                    <h1 class="text-3xl font-bold">Add New Set</h1>
                    <form action="/lego/addSet" method="POST" class="mt-4" novalidate id="addSetForm">
                        <div class="form-control">
                            <label for="name" class="label">Name</label>
                            <input type="text" id="name" name="name" class="input input-bordered" placeholder="Set Name" required>
                            <div class="error text-red-500 text-sm text-left mt-1"></div>
                        </div>
                        <div class="form-control">
                            <label for="year" class="label">Year</label>
                            <input type="number" id="year" name="year" class="input input-bordered" placeholder="Year of Release" required min="1000" max="2024">
                            <div class="error text-red-500 text-sm text-left mt-1"></div>
                        </div>
                        <div class="form-control">
                            <label for="num_parts" class="label">Number of Parts</label>
                            <input type="number" id="num_parts" name="num_parts" class="input input-bordered" placeholder="Total Parts" required>
                            <div class="error text-red-500 text-sm text-left mt-1"></div>
                        </div>
                        <div class="form-control">
                            <label for="img_url" class="label">Image URL</label>
                            <input type="url" id="img_url" name="img_url" class="input input-bordered" placeholder="http://www.example.com/image.jpg" required>
                            <div class="error text-red-500 text-sm text-left mt-1"></div>
                        </div>
                        <div class="form-control">
                            <label for="theme_id"  class="label">Theme</label>
                            <select id="theme_id" name="theme_id" class="select select-bordered" required>
                                <% themes.forEach(theme => { %>
                                    <option value="<%= theme.id %>"><%= theme.name %></option>
                                <% }) %>
                            </select>
                            <div class="error text-red-500 text-sm mt-1"></div>
                        </div>
                        <div class="form-control">
                            <label for="set_num" class="label">Set Number</label>
                            <input type="text" id="set_num" name="set_num" class="input input-bordered" required placeholder="Set Number">
                            <div class="error text-red-500 text-sm text-left mt-1"></div>
                        </div>
                        <div class="form-control mt-4">
                            <button type="submit" class="btn btn-primary">Submit New Set</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('#addSetForm');
            const inputs = form.querySelectorAll('input, select');
            const currentYear = new Date().getFullYear();

            inputs.forEach(input => {
                input.addEventListener('input', function () {
                    validateField(input);
                });
            });

            form.addEventListener('submit', (e) => {
                e.preventDefault();
                if (validateInputs()) {
                    form.submit();
                }
            });

            function validateField(field) {
                const fieldValue = field.value.trim();

                if (field.id === 'year') {
                    validateYear(field);
                } else {
                    if (fieldValue === '') {
                        setErrorFor(field, `Please enter a ${field.previousElementSibling.innerText.toLowerCase()}`);
                    } else {
                        setSuccessFor(field);
                    }
                }
            }

            function setErrorFor(element, message) {
                const inputControl = element.parentElement;
                const errorDisplay = inputControl.querySelector('.error');
                errorDisplay.innerText = message;
                inputControl.classList.add('error');
                inputControl.classList.remove('success');
            }

            function setSuccessFor(element) {
                const inputControl = element.parentElement;
                const errorDisplay = inputControl.querySelector('.error');
                errorDisplay.innerText = '';
                inputControl.classList.add('success');
                inputControl.classList.remove('error');
            }

            function validateYear(field) {
                const yearValue = parseInt(field.value, 10);
                if (isNaN(yearValue) || yearValue < 1000 || yearValue > currentYear) {
                    setErrorFor(field, `Year must be between 1000 and ${currentYear}`);
                    return false;
                } else {
                    setSuccessFor(field);
                    return true;
                }
            }

            function validateInputs() {
                let isValid = true;
                inputs.forEach(input => {
                    const fieldValue = input.value.trim();
                    if (input.id === 'year') {
                        isValid = isValid && validateYear(input); // Check year specifically
                    } else if (fieldValue === '') {
                        setErrorFor(input, `Please enter a ${input.previousElementSibling.innerText.toLowerCase()}`);
                        isValid = false;
                    }
                });

                return isValid;
            }
        });
    </script>

</body>
</html>
